{"version":3,"sources":["components/MotoCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["MotoCard","props","react_default","a","createElement","className","value","id","onClick","handleClick","alt","name","src","image","Wrapper","children","Title","href","message","score","App","state","motocross","idsClicked","topScore","console","log","_this","shuffleCards","includes","setState","concat","i","length","j","Math","floor","random","_ref","_this2","this","components_Wrapper","components_Title","map","moto","components_MotoCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"wvDAeeA,SAZE,SAAAC,GAAK,OAClBC,EAAAC,EAAAC,cAAA,OACAC,UAAU,OACVC,MAAOL,EAAMM,GACbC,QAAS,kBAAMP,EAAMQ,YAAYR,EAAMM,MACrCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKM,IAAKT,EAAMU,KAAMC,IAAKX,EAAMY,YCH1BC,SAHC,SAAAb,GAAK,OACnBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMc,YCMnBC,SAPD,SAAAf,GAAK,OACjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yDACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeY,KAAK,+CAA8Cf,EAAAC,EAAAC,cAAA,wCAAgCH,EAAMiB,UACrHhB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAeE,GAAG,YAAhC,UAAmDN,EAAMkB,MAAzD,eCqDSC,6MAnDbC,MAAQ,CACNC,YACAC,WAAY,GACZJ,MAAO,EACPK,SAAU,EACVN,QAAS,uCAGXT,YAAc,SAAAF,GACZkB,QAAQC,IAAInB,GACZoB,EAAKC,aAAaD,EAAKN,MAAMC,WACzBK,EAAKN,MAAME,WAAWM,SAAStB,IACjCoB,EAAKG,SAAU,CAACZ,QAAS,sCACzBS,EAAKG,SAAU,CAACX,MAAO,KAErBQ,EAAKN,MAAMF,OAAS,GAClBQ,EAAKG,SAAU,CAACZ,QAAS,qCAEvBS,EAAKG,SAAU,CAACX,MAAOQ,EAAKN,MAAMF,MAAO,IAEjDQ,EAAKG,SAAS,CAAEP,WAAYI,EAAKN,MAAME,WAAWQ,OAAOxB,QAI3DqB,aAAe,SAAAzB,GACX,IAAK,IAAI6B,EAAI7B,EAAE8B,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACnC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADPM,EAEpB,CAACnC,EAAE+B,GAAI/B,EAAE6B,IAAvB7B,EAAE6B,GAFgCM,EAAA,GAE5BnC,EAAE+B,GAF0BI,EAAA,GAIvC,OAAOnC,2EAIF,IAAAoC,EAAAC,KACP,OACEtC,EAAAC,EAAAC,cAACqC,EAAD,KACEvC,EAAAC,EAAAC,cAACsC,EAAD,CAAOvB,MAAOqB,KAAKnB,MAAMF,MAAOD,QAASsB,KAAKnB,MAAMH,UACnDsB,KAAKnB,MAAMC,UAAUqB,IAAI,SAAAC,GAAI,OAC5B1C,EAAAC,EAAAC,cAACyC,EAAD,CACEpC,YAAa8B,EAAK9B,YAClBF,GAAIqC,EAAKrC,GACTuC,IAAKF,EAAKrC,GACVI,KAAMiC,EAAKjC,KACXE,MAAO+B,EAAK/B,kBA7CNkC,mBCDlBC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.7b0feeac.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst MotoCard = props => (\n    <div \n    className=\"card\"\n    value={props.id} \n    onClick={() => props.handleClick(props.id)}>\n      <div className=\"cardImage\">\n        <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n  );\n\n\nexport default MotoCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Wrapper = props => (\n  <div className=\"wrapper\">{props.children}</div>\n)\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Title = props => (\n  <nav className=\"navbar navbar-expand-lg navbar-dark fixed-top bg-dark\">\n      <a className=\"navbar-brand\" href=\"https://billysterling.github.io/ClickyGame/\"><h3>Motocross Clicky Game      {props.message}</h3></a>\n      <h3 className=\"ml-auto mt-2\" id=\"counters\">Score: {props.score} </h3>\n  </nav>\n)\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport MotoCard from \"./components/MotoCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport motocross from \"./motocross.json\";\n\nclass App extends Component {\n  // Setting this.state.motocross to the motocross json array\n  state = {\n    motocross,\n    idsClicked: [],\n    score: 0,\n    topScore: 0,\n    message: \"Don't Click the Same Image Twice!\"\n  };\n\n  handleClick = id => {\n    console.log(id)\n    this.shuffleCards(this.state.motocross)\n    if (this.state.idsClicked.includes(id)) {\n      this.setState( {message: \"YOU LOST!    Click here to replay\"} )\n      this.setState( {score: 0} )\n      }  else if (\n        this.state.score >= 14  ) {\n          this.setState( {message: \"YOU WON!    Click here to replay\"} )}\n          else {\n            this.setState( {score: this.state.score +1} )\n          };\n    this.setState({ idsClicked: this.state.idsClicked.concat(id) });\n  };\n\n  //  The Fisherâ€“Yates shuffle. See:  https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array and refer to ES6 version on page. \n  shuffleCards = a => {\n      for (let i = a.length - 1; i > 0; i--) {\n          const j = Math.floor(Math.random() * (i + 1));\n          [a[i], a[j]] = [a[j], a[i]];\n      }\n      return a;\n  }\n\n  // Map over this.state.motocross and render a motoCard component for each moto object\n  render() {\n    return (\n      <Wrapper>\n        <Title score={this.state.score} message={this.state.message}/>\n        {this.state.motocross.map(moto => (\n          <MotoCard\n            handleClick={this.handleClick}\n            id={moto.id}\n            key={moto.id}\n            name={moto.name}\n            image={moto.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}